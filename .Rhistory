img_urls[[1]][item] = url_decode(basename(img_urls[[1]][item]))
img_urls[[1]][item] = paste("/files/",img_urls[[1]][item], sep = "")
}
# replace image with first element of img_urls
import_data[row,]$image <- img_urls[[1]][1]
# create new column containing all img_urls as yaml
#import_data <- mutate(import_data, images = as.yaml(img_urls[[1]]))
# not as yaml
import_data <- mutate(import_data, images = toString(img_urls[[1]]))
# convert fields to yaml frontmatter
fm <- select(import_data[row,],-body, -images, -tags) %>%
as.yaml()
images <- select(import_data[row,],images) %>%
as.yaml()
# get body
content <- select(import_data[row,], body) %>%
as.character()
# write to file
write("---", file_path)
write(fm, file_path, append = T)
#write(images, file_path, append = T)
#write("images:", file_path, append = T)
write(paste("images: [",import_data[row,]$images, "]", sep = ""), file_path, append = T)
write("---", file_path, append = T)
write(content, file_path, append = T)
}
# set working directory
setwd(here("content/english/news/"))
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data$slug <- str_replace_all(import_data$slug,"/news","")
import_data[is.na(import_data)] = ""
# loop through rows creating slug.md for each item
for (row in 1:nrow(import_data)) {
# set file path
file_path <- paste(basename(import_data[row,]$slug),".md", sep = "")
# convert image field to list
img_urls <- str_split(import_data[row,]$image, ", ")
# decode image urls and add files path
for (item in 1:length(img_urls[[1]])) {
img_urls[[1]][item] = url_decode(basename(img_urls[[1]][item]))
img_urls[[1]][item] = paste("/files/",img_urls[[1]][item], sep = "")
}
# replace image with first element of img_urls
import_data[row,]$image <- img_urls[[1]][1]
# create new column containing all img_urls
import_data <- mutate(import_data, images = toString(img_urls[[1]]))
# convert fields to yaml frontmatter
fm <- select(import_data[row,],-body, -images, -tags) %>%
as.yaml()
# get body
content <- select(import_data[row,], body) %>%
as.character()
# write to file
write("---", file_path)
write(fm, file_path, append = T)
write(paste("images: [",import_data[row,]$images, "]", sep = ""), file_path, append = T)
write("---", file_path, append = T)
write(content, file_path, append = T)
}
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data$slug <- str_replace_all(import_data$slug,"/news","")
import_data[is.na(import_data)] = ""
# loop through rows creating slug.md for each item
for (row in 1:nrow(import_data)) {
# set file path
file_path <- paste(basename(import_data[row,]$slug),".md", sep = "")
# convert image field to list
img_urls <- str_split(import_data[row,]$image, ", ")
# decode image urls and add files path
for (item in 1:length(img_urls[[1]])) {
img_urls[[1]][item] = url_decode(basename(img_urls[[1]][item]))
img_urls[[1]][item] = paste("/files/",img_urls[[1]][item], sep = "")
}
# replace image with first element of img_urls
import_data[row,]$image <- img_urls[[1]][1]
# create new column containing all img_urls
import_data <- mutate(import_data, images = toString(img_urls[[1]]))
# fix date formatting
import_data$date <- as.Date(import_data$date)
# convert fields to yaml frontmatter
fm <- select(import_data[row,],-body, -images, -tags) %>%
as.yaml()
# get body
content <- select(import_data[row,], body) %>%
as.character()
# write to file
write("---", file_path)
write(fm, file_path, append = T)
write(paste("images: [",import_data[row,]$images, "]", sep = ""), file_path, append = T)
write("---", file_path, append = T)
write(content, file_path, append = T)
}
# fix date formatting
import_data$date <- as.Date(import_data$date)
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data$slug <- str_replace_all(import_data$slug,"/news","")
import_data[is.na(import_data)] = ""
# fix date formatting
import_data$date <- as.Date(import_data$date)
View(import_data)
??as.Date
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data$slug <- str_replace_all(import_data$slug,"/news","")
import_data[is.na(import_data)] = ""
# fix date formatting
import_data$date <- lubridate::as_date(import_data$date)
View(import_data)
# fix date formatting
import_data$date <- lubridate::as_datetime(import_data$date)
# fix date formatting
import_data$date <- as.character(import_data$date)
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data$slug <- str_replace_all(import_data$slug,"/news","")
import_data[is.na(import_data)] = ""
# fix date formatting
import_data$date <- as.character(import_data$date)
# loop through rows creating slug.md for each item
for (row in 1:nrow(import_data)) {
# set file path
file_path <- paste(basename(import_data[row,]$slug),".md", sep = "")
# convert image field to list
img_urls <- str_split(import_data[row,]$image, ", ")
# decode image urls and add files path
for (item in 1:length(img_urls[[1]])) {
img_urls[[1]][item] = url_decode(basename(img_urls[[1]][item]))
img_urls[[1]][item] = paste("/files/",img_urls[[1]][item], sep = "")
}
# replace image with first element of img_urls
import_data[row,]$image <- img_urls[[1]][1]
# create new column containing all img_urls
import_data <- mutate(import_data, images = toString(img_urls[[1]]))
# convert fields to yaml frontmatter
fm <- select(import_data[row,],-body, -images, -tags) %>%
as.yaml()
# get body
content <- select(import_data[row,], body) %>%
as.character()
# write to file
write("---", file_path)
write(fm, file_path, append = T)
write(paste("images: [",import_data[row,]$images, "]", sep = ""), file_path, append = T)
write("---", file_path, append = T)
write(content, file_path, append = T)
}
# set working directory
setwd(here("content/english/news/"))
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data$slug <- str_replace_all(import_data$slug,"/news","")
import_data[is.na(import_data)] = ""
# fix date formatting
import_data$date <- as.character(import_data$date)
# loop through rows creating slug.md for each item
for (row in 1:nrow(import_data)) {
# set file path
file_path <- paste(basename(import_data[row,]$slug),".md", sep = "")
# convert image field to list
img_urls <- str_split(import_data[row,]$image, ", ")
# decode image urls and add files path
for (item in 1:length(img_urls[[1]])) {
img_urls[[1]][item] = url_decode(basename(img_urls[[1]][item]))
img_urls[[1]][item] = paste("/files/",img_urls[[1]][item], sep = "")
}
# replace image with first element of img_urls
import_data[row,]$image <- img_urls[[1]][1]
# create new column containing all img_urls
import_data <- mutate(import_data, images = toString(img_urls[[1]]))
# convert fields to yaml frontmatter
fm <- select(import_data[row,],-body, -images) %>%
as.yaml()
# get body
content <- select(import_data[row,], body) %>%
as.character()
# write to file
write("---", file_path)
write(fm, file_path, append = T)
write(paste("images: [",import_data[row,]$images, "]", sep = ""), file_path, append = T)
write("---", file_path, append = T)
write(content, file_path, append = T)
}
# set working directory
setwd(here("content/english/news/"))
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data$slug <- str_replace_all(import_data$slug,"/news","")
import_data[is.na(import_data)] = ""
# fix date formatting
import_data$date <- as.character(import_data$date)
# loop through rows creating slug.md for each item
for (row in 1:nrow(import_data)) {
# set file path
file_path <- paste(basename(import_data[row,]$slug),".md", sep = "")
# convert image field to list
img_urls <- str_split(import_data[row,]$image, ", ")
# decode image urls and add files path
for (item in 1:length(img_urls[[1]])) {
img_urls[[1]][item] = url_decode(basename(img_urls[[1]][item]))
img_urls[[1]][item] = paste("/files/",img_urls[[1]][item], sep = "")
}
# replace image with first element of img_urls
import_data[row,]$image <- img_urls[[1]][1]
# create new column containing all img_urls
import_data <- mutate(import_data, images = toString(img_urls[[1]]))
# convert fields to yaml frontmatter
fm <- select(import_data[row,],-body, -images, -tags) %>%
as.yaml()
# get body
content <- select(import_data[row,], body) %>%
as.character()
# write to file
write("---", file_path)
write(fm, file_path, append = T)
write(paste("images: [",import_data[row,]$images, "]", sep = ""), file_path, append = T)
write(paste("tags: [", import_data[row,]$tags, "]", sep = ""), file_path, append = T)
write("---", file_path, append = T)
write(content, file_path, append = T)
}
# set working directory
setwd(here("content/english/news/"))
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data$slug <- str_replace_all(import_data$slug,"/news","")
import_data[is.na(import_data)] = ""
# fix date formatting
import_data$date <- as.character(import_data$date)
# loop through rows creating slug.md for each item
for (row in 1:nrow(import_data)) {
# set file path
file_path <- paste(basename(import_data[row,]$slug),".md", sep = "")
# convert image field to list
img_urls <- str_split(import_data[row,]$image, ", ")
# decode image urls and add files path
for (item in 1:length(img_urls[[1]])) {
img_urls[[1]][item] = url_decode(basename(img_urls[[1]][item]))
img_urls[[1]][item] = paste("/files/",img_urls[[1]][item], sep = "")
}
# replace image with first element of img_urls
import_data[row,]$image <- img_urls[[1]][1]
# create new column containing all img_urls
import_data <- mutate(import_data, images = toString(img_urls[[1]]))
# convert fields to yaml frontmatter
fm <- select(import_data[row,],-body, -images, -tags) %>%
as.yaml()
# get body
content <- select(import_data[row,], body) %>%
as.character()
# write to file
write("---", file_path)
write(fm, file_path, append = T)
write(paste("images: [",import_data[row,]$images, "]", sep = ""), file_path, append = T)
write(paste("tags: [", import_data[row,]$tags, "]", sep = ""), file_path, append = T)
write("categories: [Marketing Activities]", append = T)
write("---", file_path, append = T)
write(content, file_path, append = T)
}
# set working directory
setwd(here("content/english/news/"))
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data$slug <- str_replace_all(import_data$slug,"/news","")
import_data[is.na(import_data)] = ""
# fix date formatting
import_data$date <- as.character(import_data$date)
# loop through rows creating slug.md for each item
for (row in 1:nrow(import_data)) {
# set file path
file_path <- paste(basename(import_data[row,]$slug),".md", sep = "")
# convert image field to list
img_urls <- str_split(import_data[row,]$image, ", ")
# decode image urls and add files path
for (item in 1:length(img_urls[[1]])) {
img_urls[[1]][item] = url_decode(basename(img_urls[[1]][item]))
img_urls[[1]][item] = paste("/files/",img_urls[[1]][item], sep = "")
}
# replace image with first element of img_urls
import_data[row,]$image <- img_urls[[1]][1]
# create new column containing all img_urls
import_data <- mutate(import_data, images = toString(img_urls[[1]]))
# convert fields to yaml frontmatter
fm <- select(import_data[row,],-body, -images, -tags) %>%
as.yaml()
# get body
content <- select(import_data[row,], body) %>%
as.character()
# write to file
write("---", file_path)
write(fm, file_path, append = T)
write(paste("images: [",import_data[row,]$images, "]", sep = ""), file_path, append = T)
write(paste("tags: [", import_data[row,]$tags, "]", sep = ""), file_path, append = T)
write("categories: [Marketing Activities]", file_path, append = T)
write("---", file_path, append = T)
write(content, file_path, append = T)
}
# set working directory
setwd(here("content/english/news/"))
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data$slug <- str_replace_all(import_data$slug,"/news/","")
import_data[is.na(import_data)] = ""
# fix date formatting
import_data$date <- as.character(import_data$date)
# loop through rows creating slug.md for each item
for (row in 1:nrow(import_data)) {
# set file path
file_path <- paste(basename(import_data[row,]$slug),".md", sep = "")
# convert image field to list
img_urls <- str_split(import_data[row,]$image, ", ")
# decode image urls and add files path
for (item in 1:length(img_urls[[1]])) {
img_urls[[1]][item] = url_decode(basename(img_urls[[1]][item]))
img_urls[[1]][item] = paste("/files/",img_urls[[1]][item], sep = "")
}
# replace image with first element of img_urls
import_data[row,]$image <- img_urls[[1]][1]
# create new column containing all img_urls
import_data <- mutate(import_data, images = toString(img_urls[[1]]))
# convert fields to yaml frontmatter
fm <- select(import_data[row,],-body, -images, -tags) %>%
as.yaml()
# get body
content <- select(import_data[row,], body) %>%
as.character()
# write to file
write("---", file_path)
write(fm, file_path, append = T)
write(paste("images: [",import_data[row,]$images, "]", sep = ""), file_path, append = T)
write(paste("tags: [", import_data[row,]$tags, "]", sep = ""), file_path, append = T)
write("categories: [Marketing Activities]", file_path, append = T)
write("---", file_path, append = T)
write(content, file_path, append = T)
}
# set working directory
setwd(here("content/english/news/"))
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data[is.na(import_data)] = ""
# loop through rows creating index.md for each item
for (row in 1:nrow(import_data)) {
# set directory based on slug
dir_path <- paste(here("content/english/"),import_data[row,]$slug,sep = "")
# set file path
file_path <- paste(dir_path,"/index.md",sep = "")
# convert image field to list
img_urls <- str_split(import_data[row,]$image, ", ")
# decode image urls
for (item in 1:length(img_urls[[1]])) {
img_urls[[1]][item] = url_decode(basename(img_urls[[1]][item]))
}
# replace image with first element of img_urls
import_data[row,]$image <- img_urls[[1]][1]
# create new column containing remaining elements of img_urls
#import_data <- mutate(import_data, images = paste("[", toString(img_urls[[1]]), "]", sep=""))
import_data <- mutate(import_data, images = as.yaml(img_urls[[1]]))
#import_data[row,]$images <- noquote(paste('[',import_data[row,]$images,']', sep = ""))
#import_data[row,]$images <- str_replace_all(import_data[row,]$images, "\'", "")
#import_data[row,]$images <- print(import_data[row,]$images, quote = F)
#import_data <- mutate(import_data, images = img_urls[[1]])
# convert image list back to char and add []
#img_urls <- paste("[", unlist(img_urls), "]")
#import_data[row,]$image <- img_urls
# convert fields to yaml frontmatter
fm <- select(import_data[row,],-body, -images, -tags) %>%
as.yaml()
images <- select(import_data[row,],images) %>%
as.yaml()
# get body
content <- select(import_data[row,], body) %>%
as.character()
# write to file
write("---", file_path)
write(fm, file_path, append = T)
#write(images, file_path, append = T)
#write("images:", file_path, append = T)
#write(import_data[row,]$images, file_path, append = T)
write("---", file_path, append = T)
write(content, file_path, append = T)
}
# set working directory
setwd(here("content/english/news/"))
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv")
# loop through rows creating hugo leaf bundle directories with images for each news item
for (row in 1:nrow(import_data)) {
# create directory based on slug
dir_path <- paste(here("content/english/"),import_data[row,]$slug,sep = "")
dir.create(dir_path)
#get images
if (!is.na(import_data[row,]$image)) {
img_urls <- as.list(str_split(import_data[row,]$image, ", "))
for (item in 1:length(img_urls[[1]])) {
img_path <- paste(dir_path, basename(img_urls[[1]][item]), sep="/")
#check if we already have it locally
if (!file.exists(url_decode(img_path))) {
tryCatch(
download.file(img_urls[[1]][item], url_decode(img_path), mode = 'wb'),
error = function(e) print(paste(img_path, 'file was not found on mzmc server'))
)
}
}
}
}
# set working directory
setwd(here("content/english/news/"))
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data[is.na(import_data)] = ""
# loop through rows creating index.md for each item
for (row in 1:nrow(import_data)) {
# set directory based on slug
dir_path <- paste(here("content/english/"),import_data[row,]$slug,sep = "")
# set file path
file_path <- paste(dir_path,"/index.md",sep = "")
# convert image field to list
img_urls <- str_split(import_data[row,]$image, ", ")
# decode image urls
for (item in 1:length(img_urls[[1]])) {
img_urls[[1]][item] = url_decode(basename(img_urls[[1]][item]))
}
# replace image with first element of img_urls
import_data[row,]$image <- img_urls[[1]][1]
# create new column containing remaining elements of img_urls
#import_data <- mutate(import_data, images = paste("[", toString(img_urls[[1]]), "]", sep=""))
import_data <- mutate(import_data, images = as.yaml(img_urls[[1]]))
#import_data[row,]$images <- noquote(paste('[',import_data[row,]$images,']', sep = ""))
#import_data[row,]$images <- str_replace_all(import_data[row,]$images, "\'", "")
#import_data[row,]$images <- print(import_data[row,]$images, quote = F)
#import_data <- mutate(import_data, images = img_urls[[1]])
# convert image list back to char and add []
#img_urls <- paste("[", unlist(img_urls), "]")
#import_data[row,]$image <- img_urls
# convert fields to yaml frontmatter
fm <- select(import_data[row,],-body, -images, -tags) %>%
as.yaml()
images <- select(import_data[row,],images) %>%
as.yaml()
# get body
content <- select(import_data[row,], body) %>%
as.character()
# write to file
write("---", file_path)
write(fm, file_path, append = T)
#write(images, file_path, append = T)
#write("images:", file_path, append = T)
#write(import_data[row,]$images, file_path, append = T)
write("---", file_path, append = T)
write(content, file_path, append = T)
}
# set working directory
setwd(here("content/english/news/"))
library(readr)
library(dplyr)
library(yaml)
library(here)
library(stringr)
library(urltools)
library(rlist)
# set working directory
setwd(here("content/english/news/"))
# read drupal data export into dataframe
import_data <- read_csv("news-export.csv") %>%
as_tibble()
import_data$slug <- str_replace_all(import_data$slug,"/news/","")
import_data[is.na(import_data)] = ""
# fix date formatting
import_data$date <- as.character(import_data$date)
# loop through rows creating slug.md for each item
for (row in 1:nrow(import_data)) {
# set file path
file_path <- paste(basename(import_data[row,]$slug),".md", sep = "")
# convert image field to list
img_urls <- str_split(import_data[row,]$image, ", ")
# decode image urls and add files path
for (item in 1:length(img_urls[[1]])) {
img_urls[[1]][item] = url_decode(basename(img_urls[[1]][item]))
img_urls[[1]][item] = paste("/files/",img_urls[[1]][item], sep = "")
}
# replace image with first element of img_urls
import_data[row,]$image <- img_urls[[1]][1]
# create new column containing all img_urls
import_data <- mutate(import_data, images = toString(img_urls[[1]]))
# convert fields to yaml frontmatter
fm <- select(import_data[row,],-body, -images, -tags) %>%
as.yaml()
# get body
content <- select(import_data[row,], body) %>%
as.character()
# write to file
write("---", file_path)
write(fm, file_path, append = T)
write(paste("images: [",import_data[row,]$images, "]", sep = ""), file_path, append = T)
write(paste("tags: [", import_data[row,]$tags, "]", sep = ""), file_path, append = T)
write("categories: [Marketing Activities]", file_path, append = T)
write("---", file_path, append = T)
write(content, file_path, append = T)
}
